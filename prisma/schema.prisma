// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Auth {
  accountId String  @id @unique
  token     String
  signature String?
  keyType   String
  key       String
  diCid     String?
  user      User?
}

model User {
  id            Int        @id() @default(autoincrement())
  name          String?
  createdAt     String
  userCid       String?
  auth          Auth       @relation(fields: [authAccountId], references: [accountId])
  channel       Channel?
  videos        Video[]
  playlists     Playlist[]
  authAccountId String     @unique
  topicId       String?
}

model Channel {
  id          Int        @id @default(autoincrement())
  name        String
  createdAt   String
  description String
  socials     String?
  channelCid  String
  user        User       @relation(fields: [userId], references: [id])
  userId      Int        @unique
  videos      Video[]
  playlists   Playlist[]
}

model VideoToken {
  id        Int     @id @default(autoincrement())
  fileName  String
  fileSize  Int
  completed Boolean @default(false)
  video     Video   @relation(fields: [videoId], references: [id])
  videoId   Int     @unique
}

model Video {
  id           Int         @id @default(autoincrement())
  name         String
  displayName  String?
  uploadedAt   String
  description  String
  videoCid     String?
  private      Boolean     @default(false)
  published    Boolean     @default(false)
  ipfsLocation String?
  user         User        @relation(fields: [userId], references: [id])
  userId       Int
  channel      Channel     @relation(fields: [channelId], references: [id])
  channelId    Int
  playlists    Playlist[]
  videoToken   VideoToken?
}

model Playlist {
  id          Int     @id @default(autoincrement())
  name        String
  createdAt   String
  description String?
  user        User    @relation(fields: [userId], references: [id])
  userId      Int
  channel     Channel @relation(fields: [channelId], references: [id])
  channelId   Int
  videos      Video[]
}
